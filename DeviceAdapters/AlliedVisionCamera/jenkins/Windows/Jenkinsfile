properties([
    buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '14')),
    [$class: 'RebuildSettings', autoRebuild: false, rebuildDisabled: false],
    [$class: 'JobLocalConfiguration', changeReasonComment: '']
])

pipeline {
    
    agent { label 'Host_Software_Windows_Build_Machine2' }
       
    stages {
        
        stage("Build") {
            steps {
                bat label: 'cmake build Release', script: '''CALL %VS2019_VCVARSALL_BAT% amd64
                    msbuild  micromanager.sln /p:Configuration=Release /p:Platform=x64 -t:AlliedVisionCamera'''
            }
        }
        
        stage("Deploy") {
            steps {
                script {
                    def buildDir = "build\\Release\\x64"
                    def deployDir = "MicroManager_AlliedVisionCamera"

                    bat label: 'Create Deploy folder', script: """rd /s /q ${deployDir}
                        mkdir ${deployDir}
                        copy /Y /V ${buildDir}\\mmgr_dal_AlliedVisionCamera.dll ${deployDir}"""
                    
                    withCredentials([usernamePassword(credentialsId: 'jenkins-nexus-user', usernameVariable: 'NEXUS_USER', passwordVariable: 'NEXUS_USER_PW')]) {
                        bat label: 'Upload to Nexus', script:"""python -m nexus_handler upload --repository hsw_test --group-id avt.hsw.vimba.Win64 --artifact-id MicroManager_AlliedVisionCamera --auto-version --input ${deployDir} --type zip --user %NEXUS_USER% --password "%NEXUS_USER_PW%" """
                    }
                }
            }
        }
    }
    post {
        always {
            notifyBitbucket(projectKey: "${currentBuild.fullDisplayName}")
        }
        unstable {
            emailext (
                subject: "UNSTABLE: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                body: """The build for the job ${env.JOB_NAME} > #${env.BUILD_NUMBER} failed:
Check console output at ${env.BUILD_URL}""",
                recipientProviders: [[$class: 'DevelopersRecipientProvider']]
            )
        }
        failure {
            emailext (
                subject: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                body: """The Job ${env.JOB_NAME} resulted in an unexpected error during build ${env.BUILD_NUMBER}.

Check console output at ${env.BUILD_URL}""",
                recipientProviders: [[$class: 'DevelopersRecipientProvider']]
            )
        }
    }
}